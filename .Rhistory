z * 2 + 1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2,R")
info(file.rename)
info(file.rename())
?file.rename
file.rename("mytest.R", "mytest2.R")
file.rename("mytest2,R", "mytest2.R")
play()
nxt()
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("mytest3.R", folder1, folder2)
file.path("mytest3.R", 'folder1', 'folder2')
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = T)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Will")
my_name
paste(my_name, collpase = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_date <- sample(c(y, z), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints)
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(4,5,10)
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(stdev, c(1.4, 3.6, 7.9, 8.8))
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Today", "is", "Thursday")
submit()
submit()
mad_libs(place = Chicago, adjective = smelly, noun = cowboy)
mad_libs(place = "Chicago", adjective = "smelly", noun = "cowboy")
submit()
"I" %p% "love" %p% "R"
'I' %p% 'love' %p% 'R'
"I" %p% "love" %p% "R"
info()
"I"%p%"love"%p%"R"
"I"%p%"love"%p%"R!"
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "file.csv", method = "curl")
read.csv("file.csv")
data <- read.csv("file.csv")
class(data)
data$VAL == 24
data[data$VAL == 24]
data[data$VAL == 24,]
data[(data$VAL == 24) == TRUE,]
data[,data$VAL == 24]
data$VAL == 24
data$VAL[data$VAL == 24]
sum(data$VAL == 24)
sum(data$VAL == 24, na.rm = TRUE)
library(xlsx)
library(XLSX)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "xldata.xlsx", method = "curl")
xldata <- read.xlsx("xldata.xlsx")
install.packages("xlsx")
install.packages("xml")
install.packages("XML")
xldata <- read.xlsx("xldata.xlsx")
library(xlsx)
xldata <- read.xlsx("xldata.xlsx")
xldata <- read.xlsx("xldata.xlsx", sheetIndex = 1)
?read.xlsx
dat <- read.xlsx("xldata.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat
xum(dat$Zip * dat$Ext, na.rm = T)
sum(dat$Zip * dat$Ext, na.rm = T)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
doc <- xmlTreeParse(fileUrl, useInternal = TRUE, method = "curl")
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
download.file(fileUrl, destfile = "file.xml", method = "curl", quiet = T)
doc <- xmlTreeParse("file.xml", useInternal = TRUE)
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
rootNode[[1]]
xpathSApply(rootNode, "//zipcode", xmlValue)
zipcodes <- xpathSApply(rootNode, "//zipcode", xmlValue)
sum(zipcodes == 21231, rm.na() = T)
sum(zipcodes == 21231, rm.na = T)
sum(zipcodes == 21231)
sum(zipcodes == 21231, na.rm = T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "file.csv", method = "curl")
DT <- fread("file.csv")
install.packages("data.table")
library(data.table)
DT <- fread("file.csv")
System.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
?system.time
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
{rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]}
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
class(DT)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({sapply(split(DT$pwgtp15,DT$SEX),mean)})
system.time({tapply(DT$pwgtp15,DT$SEX,mean)})
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
system.time({DT[,mean(pwgtp15),by=SEX]})
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
z <- rnorm(100)
plot(x, z)
plot(x, y)
par(mar = c(2,2,2,2))
plot(x, y)
par(mar = c(4,4,2,2))
plot(x, y)
plot(x, y, pch = 20)
plot(x, y, pch = 19)
plot(x, y, pch = 2)
plot(x, y, pch = 3)
plot(x, y, pch = 4)
plot(x, y, pch = 4)
plot(x, y, pch = 20)
example(points)
plot(x, y, pch = 20)
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 20)
title("Scatterplot")
text(-2, -2, "Label")
legend("topleft", legend = "Data")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = "blue")
plot(x, y, xlab = "Weight", ylab = "Height", main = "scatterplot", pch = 20)
legend("topright", legend = "data", pch = 20)
fit <- lm(y ~ x)
abline(fit, lwd = 3, col = "red")
z <- rpois(100, 2)
par(mfrow = c(2,1))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par("mar")
par(mar = c(2, 2, 1 ,1))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par(mfrow = c(1, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par(mar = c(4,4,2,2))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par(mfrow = c(2,2))
plot(x,y)
plot(x,z)
plot(z,x)
plot(y, x)
par(mfrow = c(1,1))
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2, 50)
g <- gl(2, 50, labels = c("Male", "Female"))
str(g)
plot(x, y)
plot(x, y, type = "n")
points(x[g=="Male"], y[g=="Male"])
points(x[g=="Male"], y[g=="Male"], col = "green")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"])
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"])
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue")
dev.off()
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
library("RMySQL")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databaes;"); dbDisconnect(ucscDb)
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb)
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
dbListFields(hg19, "affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:20, nr=5,nc=2)
h5write(A, "example.h5","foo/A")
B=array(seq(0.1,2.0,by=0.1), dim=c(5,2,2))
attr(b,"scale") <- "liter"
attr(B,"scale") <- "liter"
B
h5write(B, "example.h5","foo/foobaa/B")
h5ls("example.h5")
df = data.fram(1L:5L, seq(0,1,length.out=5),c("ab","cde","fghi","a","s"), stringAsFactors=FALSE)
df = data.frame(1L:5L, seq(0,1,length.out=5),c("ab","cde","fghi","a","s"), stringAsFactors=FALSE)
h5write(df, "example.h5", "df")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
readA
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5read("example.h5","foo/A")
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
library(XML)
html <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
library(httr)
html2 = GET(url)
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=T)
xpathSApply(parsedHtml, "//title", xmlValue)
install.packages("sqldf")
library(sqldf)
db <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
db <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "data.csv")
db <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "data.csv", method ="curl")
acs <- read.csv("data.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv.sql("data.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
data(acs, package="PASWR")
data(acs)
acs <- read.csv("data.csv")
data(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
con.close()
close(con)
require(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
detach("package:RMySQL", unload=TRUE)
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
sqldf("select distinct * from acs")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, use(InternalNodes=T))
html <- GET(url)
nchar?
?nchar
doc <- htmlParse(html)
doc
capture.output(doc)[5]
nchar(capture.output(doc)[10])
nchar(capture.output(doc)[9])
nchar(capture.output(doc)[11])
capture.output(doc)
nchar(capture.output(doc)[8])
nchar(capture.output(doc)[7])
nchar(capture.output(doc)[6])
doc
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(url)
htmlcode <- readLines(con)
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
close(con)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
con <- url(url)
htmlcode <- readLines(con)
htmlcode
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
library(nlme)
library(lattice)
xplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
?splom
?trellis.par.set
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
?lattice.axis
?axis
?text
?llines
codebook(tidy)
install.packages("memisc")
library("memisc")
codebook(tidy)
?codebook
rm(list=ls())
source('~/Documents/R/course_project/run_analysis.R')
getwd()
setwd(course_project)
setwd("course_project")
source('~/Documents/R/course_project/run_analysis.R')
View(tidy)
source('~/Documents/R/course_project/run_analysis.R')
detach("memisc")
detach("packages.memisc")
detach("package.memisc")
detach("package.memisc", unload=TRUE)
detach("package:memisc", unload=TRUE)
library("memisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:memisc", unload=TRUE)
source('~/Documents/R/course_project/run_analysis.R')
source('~/Documents/R/course_project/run_analysis.R', local=TRUE)
source('run_analysis.R')
